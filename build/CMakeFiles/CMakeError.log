Determining if the function fgetln exists failed with the following output:
Change Dir: /home/alin/codework-scanmem/scanmem/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/ninja cmTC_9b2e0 && [1/2] Building C object CMakeFiles/cmTC_9b2e0.dir/CheckFunctionExists.c.o
[2/2] Linking C executable cmTC_9b2e0
FAILED: cmTC_9b2e0 
: && /usr/bin/gcc -DCHECK_FUNCTION_EXISTS=fgetln  CMakeFiles/cmTC_9b2e0.dir/CheckFunctionExists.c.o -o cmTC_9b2e0   && :
/usr/bin/ld: CMakeFiles/cmTC_9b2e0.dir/CheckFunctionExists.c.o: in function `main':
CheckFunctionExists.c:(.text+0x14): undefined reference to `fgetln'
collect2: error: ld returned 1 exit status
ninja: build stopped: subcommand failed.



Determining size of sighandler_t failed with the following output:
Change Dir: /home/alin/codework-scanmem/scanmem/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/ninja cmTC_95ce4 && [1/2] Building C object CMakeFiles/cmTC_95ce4.dir/HAVE_SIGHANDLER_T.c.o
FAILED: CMakeFiles/cmTC_95ce4.dir/HAVE_SIGHANDLER_T.c.o 
/usr/bin/gcc   -fPIE -std=gnu17 -o CMakeFiles/cmTC_95ce4.dir/HAVE_SIGHANDLER_T.c.o -c /home/alin/codework-scanmem/scanmem/build/CMakeFiles/CheckTypeSize/HAVE_SIGHANDLER_T.c
/home/alin/codework-scanmem/scanmem/build/CMakeFiles/CheckTypeSize/HAVE_SIGHANDLER_T.c:27:22: error: ‘sighandler_t’ undeclared here (not in a function)
   27 | #define SIZE (sizeof(sighandler_t))
      |                      ^~~~~~~~~~~~
/home/alin/codework-scanmem/scanmem/build/CMakeFiles/CheckTypeSize/HAVE_SIGHANDLER_T.c:29:12: note: in expansion of macro ‘SIZE’
   29 |   ('0' + ((SIZE / 10000)%10)),
      |            ^~~~
ninja: build stopped: subcommand failed.


/home/alin/codework-scanmem/scanmem/build/CMakeFiles/CheckTypeSize/HAVE_SIGHANDLER_T.c:
#include <sys/types.h>
#include <stdint.h>
#include <stddef.h>


#undef KEY
#if defined(__i386)
# define KEY '_','_','i','3','8','6'
#elif defined(__x86_64)
# define KEY '_','_','x','8','6','_','6','4'
#elif defined(__PPC64__)
# define KEY '_','_','P','P','C','6','4','_','_'
#elif defined(__ppc64__)
# define KEY '_','_','p','p','c','6','4','_','_'
#elif defined(__PPC__)
# define KEY '_','_','P','P','C','_','_'
#elif defined(__ppc__)
# define KEY '_','_','p','p','c','_','_'
#elif defined(__aarch64__)
# define KEY '_','_','a','a','r','c','h','6','4','_','_'
#elif defined(__ARM_ARCH_7A__)
# define KEY '_','_','A','R','M','_','A','R','C','H','_','7','A','_','_'
#elif defined(__ARM_ARCH_7S__)
# define KEY '_','_','A','R','M','_','A','R','C','H','_','7','S','_','_'
#endif

#define SIZE (sizeof(sighandler_t))
static char info_size[] =  {'I', 'N', 'F', 'O', ':', 's','i','z','e','[',
  ('0' + ((SIZE / 10000)%10)),
  ('0' + ((SIZE / 1000)%10)),
  ('0' + ((SIZE / 100)%10)),
  ('0' + ((SIZE / 10)%10)),
  ('0' +  (SIZE    % 10)),
  ']',
#ifdef KEY
  ' ','k','e','y','[', KEY, ']',
#endif
  '\0'};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_size[argc];
  (void)argv;
  return require;
}


